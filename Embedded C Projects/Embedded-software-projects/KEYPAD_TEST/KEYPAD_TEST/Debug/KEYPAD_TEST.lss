
KEYPAD_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000486  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00000486  0000051a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800078  00800078  00000532  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000532  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000564  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000005a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ca1  00000000  00000000  00000628  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000734  00000000  00000000  000012c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c3  00000000  00000000  000019fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000fc  00000000  00000000  00001ec0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000041b  00000000  00000000  00001fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000480  00000000  00000000  000023d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002857  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e8       	ldi	r30, 0x86	; 134
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 37       	cpi	r26, 0x78	; 120
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e7       	ldi	r26, 0x78	; 120
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a9 37       	cpi	r26, 0x79	; 121
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 16 02 	call	0x42c	; 0x42c <main>
  8a:	0c 94 41 02 	jmp	0x482	; 0x482 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_SetPinDirection>:
   case DIO_PORTC:
      TOGGLE(PORTC, PinID);
      break;
   
   case DIO_PORTD:
      TOGGLE(PORTD, PinID);
  92:	81 30       	cpi	r24, 0x01	; 1
  94:	01 f1       	breq	.+64     	; 0xd6 <DIO_SetPinDirection+0x44>
  96:	30 f0       	brcs	.+12     	; 0xa4 <DIO_SetPinDirection+0x12>
  98:	82 30       	cpi	r24, 0x02	; 2
  9a:	b1 f1       	breq	.+108    	; 0x108 <DIO_SetPinDirection+0x76>
  9c:	83 30       	cpi	r24, 0x03	; 3
  9e:	09 f4       	brne	.+2      	; 0xa2 <DIO_SetPinDirection+0x10>
  a0:	4c c0       	rjmp	.+152    	; 0x13a <DIO_SetPinDirection+0xa8>
  a2:	08 95       	ret
  a4:	41 30       	cpi	r20, 0x01	; 1
  a6:	59 f4       	brne	.+22     	; 0xbe <DIO_SetPinDirection+0x2c>
  a8:	2a b3       	in	r18, 0x1a	; 26
  aa:	81 e0       	ldi	r24, 0x01	; 1
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <DIO_SetPinDirection+0x22>
  b0:	88 0f       	add	r24, r24
  b2:	99 1f       	adc	r25, r25
  b4:	6a 95       	dec	r22
  b6:	e2 f7       	brpl	.-8      	; 0xb0 <DIO_SetPinDirection+0x1e>
  b8:	82 2b       	or	r24, r18
  ba:	8a bb       	out	0x1a, r24	; 26
  bc:	08 95       	ret
  be:	2a b3       	in	r18, 0x1a	; 26
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	02 c0       	rjmp	.+4      	; 0xca <DIO_SetPinDirection+0x38>
  c6:	88 0f       	add	r24, r24
  c8:	99 1f       	adc	r25, r25
  ca:	6a 95       	dec	r22
  cc:	e2 f7       	brpl	.-8      	; 0xc6 <DIO_SetPinDirection+0x34>
  ce:	80 95       	com	r24
  d0:	82 23       	and	r24, r18
  d2:	8a bb       	out	0x1a, r24	; 26
  d4:	08 95       	ret
  d6:	41 30       	cpi	r20, 0x01	; 1
  d8:	59 f4       	brne	.+22     	; 0xf0 <DIO_SetPinDirection+0x5e>
  da:	27 b3       	in	r18, 0x17	; 23
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	02 c0       	rjmp	.+4      	; 0xe6 <DIO_SetPinDirection+0x54>
  e2:	88 0f       	add	r24, r24
  e4:	99 1f       	adc	r25, r25
  e6:	6a 95       	dec	r22
  e8:	e2 f7       	brpl	.-8      	; 0xe2 <DIO_SetPinDirection+0x50>
  ea:	82 2b       	or	r24, r18
  ec:	87 bb       	out	0x17, r24	; 23
  ee:	08 95       	ret
  f0:	27 b3       	in	r18, 0x17	; 23
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	02 c0       	rjmp	.+4      	; 0xfc <DIO_SetPinDirection+0x6a>
  f8:	88 0f       	add	r24, r24
  fa:	99 1f       	adc	r25, r25
  fc:	6a 95       	dec	r22
  fe:	e2 f7       	brpl	.-8      	; 0xf8 <DIO_SetPinDirection+0x66>
 100:	80 95       	com	r24
 102:	82 23       	and	r24, r18
 104:	87 bb       	out	0x17, r24	; 23
 106:	08 95       	ret
 108:	41 30       	cpi	r20, 0x01	; 1
 10a:	59 f4       	brne	.+22     	; 0x122 <DIO_SetPinDirection+0x90>
 10c:	24 b3       	in	r18, 0x14	; 20
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_SetPinDirection+0x86>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	6a 95       	dec	r22
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_SetPinDirection+0x82>
 11c:	82 2b       	or	r24, r18
 11e:	84 bb       	out	0x14, r24	; 20
 120:	08 95       	ret
 122:	24 b3       	in	r18, 0x14	; 20
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	02 c0       	rjmp	.+4      	; 0x12e <DIO_SetPinDirection+0x9c>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	6a 95       	dec	r22
 130:	e2 f7       	brpl	.-8      	; 0x12a <DIO_SetPinDirection+0x98>
 132:	80 95       	com	r24
 134:	82 23       	and	r24, r18
 136:	84 bb       	out	0x14, r24	; 20
 138:	08 95       	ret
 13a:	41 30       	cpi	r20, 0x01	; 1
 13c:	59 f4       	brne	.+22     	; 0x154 <DIO_SetPinDirection+0xc2>
 13e:	21 b3       	in	r18, 0x11	; 17
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_SetPinDirection+0xb8>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	6a 95       	dec	r22
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_SetPinDirection+0xb4>
 14e:	82 2b       	or	r24, r18
 150:	81 bb       	out	0x11, r24	; 17
 152:	08 95       	ret
 154:	21 b3       	in	r18, 0x11	; 17
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_SetPinDirection+0xce>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_SetPinDirection+0xca>
 164:	80 95       	com	r24
 166:	82 23       	and	r24, r18
 168:	81 bb       	out	0x11, r24	; 17
 16a:	08 95       	ret

0000016c <DIO_PinValue>:
 16c:	81 30       	cpi	r24, 0x01	; 1
 16e:	01 f1       	breq	.+64     	; 0x1b0 <DIO_PinValue+0x44>
 170:	30 f0       	brcs	.+12     	; 0x17e <DIO_PinValue+0x12>
 172:	82 30       	cpi	r24, 0x02	; 2
 174:	b1 f1       	breq	.+108    	; 0x1e2 <DIO_PinValue+0x76>
 176:	83 30       	cpi	r24, 0x03	; 3
 178:	09 f4       	brne	.+2      	; 0x17c <DIO_PinValue+0x10>
 17a:	4c c0       	rjmp	.+152    	; 0x214 <DIO_PinValue+0xa8>
 17c:	08 95       	ret
 17e:	41 30       	cpi	r20, 0x01	; 1
 180:	59 f4       	brne	.+22     	; 0x198 <DIO_PinValue+0x2c>
 182:	2b b3       	in	r18, 0x1b	; 27
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	02 c0       	rjmp	.+4      	; 0x18e <DIO_PinValue+0x22>
 18a:	88 0f       	add	r24, r24
 18c:	99 1f       	adc	r25, r25
 18e:	6a 95       	dec	r22
 190:	e2 f7       	brpl	.-8      	; 0x18a <DIO_PinValue+0x1e>
 192:	82 2b       	or	r24, r18
 194:	8b bb       	out	0x1b, r24	; 27
 196:	08 95       	ret
 198:	2b b3       	in	r18, 0x1b	; 27
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_PinValue+0x38>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	6a 95       	dec	r22
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_PinValue+0x34>
 1a8:	80 95       	com	r24
 1aa:	82 23       	and	r24, r18
 1ac:	8b bb       	out	0x1b, r24	; 27
 1ae:	08 95       	ret
 1b0:	41 30       	cpi	r20, 0x01	; 1
 1b2:	59 f4       	brne	.+22     	; 0x1ca <DIO_PinValue+0x5e>
 1b4:	28 b3       	in	r18, 0x18	; 24
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <DIO_PinValue+0x54>
 1bc:	88 0f       	add	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	6a 95       	dec	r22
 1c2:	e2 f7       	brpl	.-8      	; 0x1bc <DIO_PinValue+0x50>
 1c4:	82 2b       	or	r24, r18
 1c6:	88 bb       	out	0x18, r24	; 24
 1c8:	08 95       	ret
 1ca:	28 b3       	in	r18, 0x18	; 24
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_PinValue+0x6a>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	6a 95       	dec	r22
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_PinValue+0x66>
 1da:	80 95       	com	r24
 1dc:	82 23       	and	r24, r18
 1de:	88 bb       	out	0x18, r24	; 24
 1e0:	08 95       	ret
 1e2:	41 30       	cpi	r20, 0x01	; 1
 1e4:	59 f4       	brne	.+22     	; 0x1fc <DIO_PinValue+0x90>
 1e6:	25 b3       	in	r18, 0x15	; 21
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <DIO_PinValue+0x86>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <DIO_PinValue+0x82>
 1f6:	82 2b       	or	r24, r18
 1f8:	85 bb       	out	0x15, r24	; 21
 1fa:	08 95       	ret
 1fc:	25 b3       	in	r18, 0x15	; 21
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_PinValue+0x9c>
 204:	88 0f       	add	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	6a 95       	dec	r22
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_PinValue+0x98>
 20c:	80 95       	com	r24
 20e:	82 23       	and	r24, r18
 210:	85 bb       	out	0x15, r24	; 21
 212:	08 95       	ret
 214:	41 30       	cpi	r20, 0x01	; 1
 216:	59 f4       	brne	.+22     	; 0x22e <DIO_PinValue+0xc2>
 218:	22 b3       	in	r18, 0x12	; 18
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_PinValue+0xb8>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	6a 95       	dec	r22
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_PinValue+0xb4>
 228:	82 2b       	or	r24, r18
 22a:	82 bb       	out	0x12, r24	; 18
 22c:	08 95       	ret
 22e:	22 b3       	in	r18, 0x12	; 18
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_PinValue+0xce>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_PinValue+0xca>
 23e:	80 95       	com	r24
 240:	82 23       	and	r24, r18
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret

00000246 <DIO_GET_PIN_VALUE>:
 246:	81 30       	cpi	r24, 0x01	; 1
 248:	41 f0       	breq	.+16     	; 0x25a <DIO_GET_PIN_VALUE+0x14>
 24a:	28 f0       	brcs	.+10     	; 0x256 <DIO_GET_PIN_VALUE+0x10>
 24c:	82 30       	cpi	r24, 0x02	; 2
 24e:	39 f0       	breq	.+14     	; 0x25e <DIO_GET_PIN_VALUE+0x18>
 250:	83 30       	cpi	r24, 0x03	; 3
 252:	39 f0       	breq	.+14     	; 0x262 <DIO_GET_PIN_VALUE+0x1c>
 254:	08 95       	ret
 256:	89 b3       	in	r24, 0x19	; 25
 258:	08 95       	ret
 25a:	86 b3       	in	r24, 0x16	; 22
 25c:	08 95       	ret
 25e:	83 b3       	in	r24, 0x13	; 19
 260:	08 95       	ret
 262:	80 b3       	in	r24, 0x10	; 16
 264:	08 95       	ret

00000266 <DIO_ActevatePullUp>:
}
}

void DIO_ActevatePullUp(u8 PortId, u8 PinId)
{
	 switch (PortId)
 266:	81 30       	cpi	r24, 0x01	; 1
 268:	89 f0       	breq	.+34     	; 0x28c <DIO_ActevatePullUp+0x26>
 26a:	28 f0       	brcs	.+10     	; 0x276 <DIO_ActevatePullUp+0x10>
 26c:	82 30       	cpi	r24, 0x02	; 2
 26e:	c9 f0       	breq	.+50     	; 0x2a2 <DIO_ActevatePullUp+0x3c>
 270:	83 30       	cpi	r24, 0x03	; 3
 272:	11 f1       	breq	.+68     	; 0x2b8 <DIO_ActevatePullUp+0x52>
 274:	08 95       	ret
	 {
		 case DIO_PORTA:
		     SET(PORTA, PinId);
 276:	2b b3       	in	r18, 0x1b	; 27
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	02 c0       	rjmp	.+4      	; 0x282 <DIO_ActevatePullUp+0x1c>
 27e:	88 0f       	add	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	6a 95       	dec	r22
 284:	e2 f7       	brpl	.-8      	; 0x27e <DIO_ActevatePullUp+0x18>
 286:	82 2b       	or	r24, r18
 288:	8b bb       	out	0x1b, r24	; 27
		     break;			
 28a:	08 95       	ret
		 case DIO_PORTB:	
	         SET(PORTB, PinId);
 28c:	28 b3       	in	r18, 0x18	; 24
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	02 c0       	rjmp	.+4      	; 0x298 <DIO_ActevatePullUp+0x32>
 294:	88 0f       	add	r24, r24
 296:	99 1f       	adc	r25, r25
 298:	6a 95       	dec	r22
 29a:	e2 f7       	brpl	.-8      	; 0x294 <DIO_ActevatePullUp+0x2e>
 29c:	82 2b       	or	r24, r18
 29e:	88 bb       	out	0x18, r24	; 24
		     break;			
 2a0:	08 95       	ret
		 					
		 case DIO_PORTC:	
		     SET(PORTC, PinId);
 2a2:	25 b3       	in	r18, 0x15	; 21
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <DIO_ActevatePullUp+0x48>
 2aa:	88 0f       	add	r24, r24
 2ac:	99 1f       	adc	r25, r25
 2ae:	6a 95       	dec	r22
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <DIO_ActevatePullUp+0x44>
 2b2:	82 2b       	or	r24, r18
 2b4:	85 bb       	out	0x15, r24	; 21
		     break;
 2b6:	08 95       	ret
		 
		 case DIO_PORTD:
		      SET(PORTD, PinId);
 2b8:	22 b3       	in	r18, 0x12	; 18
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <DIO_ActevatePullUp+0x5e>
 2c0:	88 0f       	add	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	6a 95       	dec	r22
 2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <DIO_ActevatePullUp+0x5a>
 2c8:	82 2b       	or	r24, r18
 2ca:	82 bb       	out	0x12, r24	; 18
 2cc:	08 95       	ret

000002ce <KPD_getvalue>:
// The Data of the KeyPad Buttons
u8 KPD_Buttons_Data[4][4] = {{ '1', '2', '3', 'A'}, {'4', '5', '6', 'B'}, {'7', '8', '9', 'C'}, {'*', '0', '#', 'D'}};
	
//using update method
void KPD_getvalue(u8* retval)
{
 2ce:	bf 92       	push	r11
 2d0:	cf 92       	push	r12
 2d2:	df 92       	push	r13
 2d4:	ef 92       	push	r14
 2d6:	ff 92       	push	r15
 2d8:	0f 93       	push	r16
 2da:	1f 93       	push	r17
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	6c 01       	movw	r12, r24
	*retval = KPD_NOT_PRESSED;
 2e2:	8f ef       	ldi	r24, 0xFF	; 255
 2e4:	f6 01       	movw	r30, r12
 2e6:	80 83       	st	Z, r24
    u8 ColumnsCounter, RowsCounter;
    u8 PINFLAG = 0;
 2e8:	b1 2c       	mov	r11, r1
    for (ColumnsCounter = 0; ColumnsCounter < 4; ColumnsCounter++) // iterates on every column 
 2ea:	d0 e0       	ldi	r29, 0x00	; 0
 2ec:	45 c0       	rjmp	.+138    	; 0x378 <KPD_getvalue+0xaa>
    {
		//Activate the current column 
        DIO_PinValue(KPD_Cols_Port, ColomPins[ColumnsCounter], LOW);
 2ee:	ed 2e       	mov	r14, r29
 2f0:	f1 2c       	mov	r15, r1
 2f2:	f7 01       	movw	r30, r14
 2f4:	ec 58       	subi	r30, 0x8C	; 140
 2f6:	ff 4f       	sbci	r31, 0xFF	; 255
 2f8:	40 e0       	ldi	r20, 0x00	; 0
 2fa:	60 81       	ld	r22, Z
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_PinValue>
		//check each row 
		for (RowsCounter = 0; RowsCounter<4; RowsCounter++) // iterates on each row (the row which have value of zero will have the pressed button 
 302:	c0 e0       	ldi	r28, 0x00	; 0
 304:	2b c0       	rjmp	.+86     	; 0x35c <KPD_getvalue+0x8e>
		{
			PIN_VALUE = DIO_GET_PIN_VALUE(KPD_Rows_Port,RowsPins[RowsCounter]);
 306:	0c 2f       	mov	r16, r28
 308:	10 e0       	ldi	r17, 0x00	; 0
 30a:	f8 01       	movw	r30, r16
 30c:	e0 59       	subi	r30, 0x90	; 144
 30e:	ff 4f       	sbci	r31, 0xFF	; 255
 310:	60 81       	ld	r22, Z
 312:	82 e0       	ldi	r24, 0x02	; 2
 314:	0e 94 23 01 	call	0x246	; 0x246 <DIO_GET_PIN_VALUE>
 318:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__data_end>
			
			if (PIN_VALUE == 0)
 31c:	81 11       	cpse	r24, r1
 31e:	1d c0       	rjmp	.+58     	; 0x35a <KPD_getvalue+0x8c>
			{
				// saves the value of the pressed button
				*retval = KPD_Buttons_Data[RowsCounter][ColumnsCounter];
 320:	f8 01       	movw	r30, r16
 322:	ee 0f       	add	r30, r30
 324:	ff 1f       	adc	r31, r31
 326:	ee 0f       	add	r30, r30
 328:	ff 1f       	adc	r31, r31
 32a:	e0 5a       	subi	r30, 0xA0	; 160
 32c:	ff 4f       	sbci	r31, 0xFF	; 255
 32e:	ee 0d       	add	r30, r14
 330:	ff 1d       	adc	r31, r15
 332:	80 81       	ld	r24, Z
 334:	f6 01       	movw	r30, r12
 336:	80 83       	st	Z, r24
				//preventing the long pressing on the button (the long press is just one press)
				while(PIN_VALUE == 0)
 338:	09 c0       	rjmp	.+18     	; 0x34c <KPD_getvalue+0x7e>
				{
					PIN_VALUE = DIO_GET_PIN_VALUE(KPD_Rows_Port,RowsPins[RowsCounter]);
 33a:	f8 01       	movw	r30, r16
 33c:	e0 59       	subi	r30, 0x90	; 144
 33e:	ff 4f       	sbci	r31, 0xFF	; 255
 340:	60 81       	ld	r22, Z
 342:	82 e0       	ldi	r24, 0x02	; 2
 344:	0e 94 23 01 	call	0x246	; 0x246 <DIO_GET_PIN_VALUE>
 348:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__data_end>
			if (PIN_VALUE == 0)
			{
				// saves the value of the pressed button
				*retval = KPD_Buttons_Data[RowsCounter][ColumnsCounter];
				//preventing the long pressing on the button (the long press is just one press)
				while(PIN_VALUE == 0)
 34c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
 350:	88 23       	and	r24, r24
 352:	99 f3       	breq	.-26     	; 0x33a <KPD_getvalue+0x6c>
				{
					PIN_VALUE = DIO_GET_PIN_VALUE(KPD_Rows_Port,RowsPins[RowsCounter]);
				}
				
				PINFLAG = 1;
 354:	bb 24       	eor	r11, r11
 356:	b3 94       	inc	r11
 358:	03 c0       	rjmp	.+6      	; 0x360 <KPD_getvalue+0x92>
    for (ColumnsCounter = 0; ColumnsCounter < 4; ColumnsCounter++) // iterates on every column 
    {
		//Activate the current column 
        DIO_PinValue(KPD_Cols_Port, ColomPins[ColumnsCounter], LOW);
		//check each row 
		for (RowsCounter = 0; RowsCounter<4; RowsCounter++) // iterates on each row (the row which have value of zero will have the pressed button 
 35a:	cf 5f       	subi	r28, 0xFF	; 255
 35c:	c4 30       	cpi	r28, 0x04	; 4
 35e:	98 f2       	brcs	.-90     	; 0x306 <KPD_getvalue+0x38>
				break;
			}
			
		}
		//Deactivate the current column
		DIO_PinValue(KPD_Cols_Port, ColomPins[ColumnsCounter], HIGH);
 360:	f7 01       	movw	r30, r14
 362:	ec 58       	subi	r30, 0x8C	; 140
 364:	ff 4f       	sbci	r31, 0xFF	; 255
 366:	41 e0       	ldi	r20, 0x01	; 1
 368:	60 81       	ld	r22, Z
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_PinValue>
		if (PINFLAG == 1)
 370:	f1 e0       	ldi	r31, 0x01	; 1
 372:	bf 16       	cp	r11, r31
 374:	21 f0       	breq	.+8      	; 0x37e <KPD_getvalue+0xb0>
void KPD_getvalue(u8* retval)
{
	*retval = KPD_NOT_PRESSED;
    u8 ColumnsCounter, RowsCounter;
    u8 PINFLAG = 0;
    for (ColumnsCounter = 0; ColumnsCounter < 4; ColumnsCounter++) // iterates on every column 
 376:	df 5f       	subi	r29, 0xFF	; 255
 378:	d4 30       	cpi	r29, 0x04	; 4
 37a:	08 f4       	brcc	.+2      	; 0x37e <KPD_getvalue+0xb0>
 37c:	b8 cf       	rjmp	.-144    	; 0x2ee <KPD_getvalue+0x20>
		{
			break;
		}
    }
	
}
 37e:	df 91       	pop	r29
 380:	cf 91       	pop	r28
 382:	1f 91       	pop	r17
 384:	0f 91       	pop	r16
 386:	ff 90       	pop	r15
 388:	ef 90       	pop	r14
 38a:	df 90       	pop	r13
 38c:	cf 90       	pop	r12
 38e:	bf 90       	pop	r11
 390:	08 95       	ret

00000392 <KPD_init>:



void KPD_init(void)
{
	DIO_SetPinDirection(KPD_Cols_Port, KPD_colom0_Pin, DIO_PIN_OUTPUT);
 392:	41 e0       	ldi	r20, 0x01	; 1
 394:	64 e0       	ldi	r22, 0x04	; 4
 396:	80 e0       	ldi	r24, 0x00	; 0
 398:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	DIO_SetPinDirection(KPD_Cols_Port, KPD_colom1_Pin, DIO_PIN_OUTPUT);
 39c:	41 e0       	ldi	r20, 0x01	; 1
 39e:	65 e0       	ldi	r22, 0x05	; 5
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	DIO_SetPinDirection(KPD_Cols_Port, KPD_colom2_Pin, DIO_PIN_OUTPUT);
 3a6:	41 e0       	ldi	r20, 0x01	; 1
 3a8:	66 e0       	ldi	r22, 0x06	; 6
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	DIO_SetPinDirection(KPD_Cols_Port, KPD_colom3_Pin, DIO_PIN_OUTPUT);
 3b0:	41 e0       	ldi	r20, 0x01	; 1
 3b2:	67 e0       	ldi	r22, 0x07	; 7
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	
	DIO_PinValue(KPD_Cols_Port, KPD_colom0_Pin, HIGH);
 3ba:	41 e0       	ldi	r20, 0x01	; 1
 3bc:	64 e0       	ldi	r22, 0x04	; 4
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_PinValue>
	DIO_PinValue(KPD_Cols_Port, KPD_colom1_Pin, HIGH);
 3c4:	41 e0       	ldi	r20, 0x01	; 1
 3c6:	65 e0       	ldi	r22, 0x05	; 5
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_PinValue>
	DIO_PinValue(KPD_Cols_Port, KPD_colom2_Pin, HIGH);
 3ce:	41 e0       	ldi	r20, 0x01	; 1
 3d0:	66 e0       	ldi	r22, 0x06	; 6
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_PinValue>
	DIO_PinValue(KPD_Cols_Port, KPD_colom3_Pin, HIGH);
 3d8:	41 e0       	ldi	r20, 0x01	; 1
 3da:	67 e0       	ldi	r22, 0x07	; 7
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_PinValue>
	
	
	DIO_SetPinDirection(KPD_Rows_Port, KPD_Row0_Pin, DIO_PIN_INPUT);
 3e2:	40 e0       	ldi	r20, 0x00	; 0
 3e4:	63 e0       	ldi	r22, 0x03	; 3
 3e6:	82 e0       	ldi	r24, 0x02	; 2
 3e8:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	DIO_SetPinDirection(KPD_Rows_Port, KPD_Row1_Pin, DIO_PIN_INPUT);
 3ec:	40 e0       	ldi	r20, 0x00	; 0
 3ee:	64 e0       	ldi	r22, 0x04	; 4
 3f0:	82 e0       	ldi	r24, 0x02	; 2
 3f2:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	DIO_SetPinDirection(KPD_Rows_Port, KPD_Row2_Pin, DIO_PIN_INPUT);
 3f6:	40 e0       	ldi	r20, 0x00	; 0
 3f8:	65 e0       	ldi	r22, 0x05	; 5
 3fa:	82 e0       	ldi	r24, 0x02	; 2
 3fc:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	DIO_SetPinDirection(KPD_Rows_Port, KPD_Row3_Pin, DIO_PIN_INPUT);
 400:	40 e0       	ldi	r20, 0x00	; 0
 402:	66 e0       	ldi	r22, 0x06	; 6
 404:	82 e0       	ldi	r24, 0x02	; 2
 406:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	
	DIO_ActevatePullUp(KPD_Rows_Port, KPD_Row0_Pin);
 40a:	63 e0       	ldi	r22, 0x03	; 3
 40c:	82 e0       	ldi	r24, 0x02	; 2
 40e:	0e 94 33 01 	call	0x266	; 0x266 <DIO_ActevatePullUp>
	DIO_ActevatePullUp(KPD_Rows_Port, KPD_Row1_Pin);
 412:	64 e0       	ldi	r22, 0x04	; 4
 414:	82 e0       	ldi	r24, 0x02	; 2
 416:	0e 94 33 01 	call	0x266	; 0x266 <DIO_ActevatePullUp>
	DIO_ActevatePullUp(KPD_Rows_Port, KPD_Row2_Pin);
 41a:	65 e0       	ldi	r22, 0x05	; 5
 41c:	82 e0       	ldi	r24, 0x02	; 2
 41e:	0e 94 33 01 	call	0x266	; 0x266 <DIO_ActevatePullUp>
	DIO_ActevatePullUp(KPD_Rows_Port, KPD_Row3_Pin);
 422:	66 e0       	ldi	r22, 0x06	; 6
 424:	82 e0       	ldi	r24, 0x02	; 2
 426:	0e 94 33 01 	call	0x266	; 0x266 <DIO_ActevatePullUp>
 42a:	08 95       	ret

0000042c <main>:
#include "DATA_TYPES.h"



int main(void)
{
 42c:	cf 93       	push	r28
 42e:	df 93       	push	r29
 430:	1f 92       	push	r1
 432:	cd b7       	in	r28, 0x3d	; 61
 434:	de b7       	in	r29, 0x3e	; 62
	KPD_init();
 436:	0e 94 c9 01 	call	0x392	; 0x392 <KPD_init>
	
	DIO_SetPinDirection(DIO_PORTA, PIN3, DIO_PIN_OUTPUT); //led0 output
 43a:	41 e0       	ldi	r20, 0x01	; 1
 43c:	63 e0       	ldi	r22, 0x03	; 3
 43e:	80 e0       	ldi	r24, 0x00	; 0
 440:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTC, PIN7, DIO_PIN_OUTPUT); //led1 output
 444:	41 e0       	ldi	r20, 0x01	; 1
 446:	67 e0       	ldi	r22, 0x07	; 7
 448:	82 e0       	ldi	r24, 0x02	; 2
 44a:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTD, PIN3, DIO_PIN_OUTPUT); //led2 output
 44e:	41 e0       	ldi	r20, 0x01	; 1
 450:	63 e0       	ldi	r22, 0x03	; 3
 452:	83 e0       	ldi	r24, 0x03	; 3
 454:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	u8 Data;
	
    /* Replace with your application code */
    while (1) 
    {
		KPD_getvalue(&Data);
 458:	ce 01       	movw	r24, r28
 45a:	01 96       	adiw	r24, 0x01	; 1
 45c:	0e 94 67 01 	call	0x2ce	; 0x2ce <KPD_getvalue>
		
		if (Data != KPD_NOT_PRESSED)
 460:	89 81       	ldd	r24, Y+1	; 0x01
 462:	8f 3f       	cpi	r24, 0xFF	; 255
 464:	c9 f3       	breq	.-14     	; 0x458 <main+0x2c>
		{
			if(Data == 4)
 466:	84 30       	cpi	r24, 0x04	; 4
 468:	31 f4       	brne	.+12     	; 0x476 <main+0x4a>
			{
				DIO_PinValue(DIO_PORTA, PIN3, HIGH);
 46a:	41 e0       	ldi	r20, 0x01	; 1
 46c:	63 e0       	ldi	r22, 0x03	; 3
 46e:	80 e0       	ldi	r24, 0x00	; 0
 470:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_PinValue>
 474:	f1 cf       	rjmp	.-30     	; 0x458 <main+0x2c>
				// SSD_displayNOM(Data, SSD_ONE);
			}
			else
			{
				DIO_PinValue(DIO_PORTA, PIN3, LOW);
 476:	40 e0       	ldi	r20, 0x00	; 0
 478:	63 e0       	ldi	r22, 0x03	; 3
 47a:	80 e0       	ldi	r24, 0x00	; 0
 47c:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_PinValue>
 480:	eb cf       	rjmp	.-42     	; 0x458 <main+0x2c>

00000482 <_exit>:
 482:	f8 94       	cli

00000484 <__stop_program>:
 484:	ff cf       	rjmp	.-2      	; 0x484 <__stop_program>
