
Fifst_LAB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000036a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  0000036a  000003de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000406  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000438  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  00000474  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001292  00000000  00000000  00000544  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008cf  00000000  00000000  000017d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000073b  00000000  00000000  000020a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a4  00000000  00000000  000027e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004dc  00000000  00000000  00002984  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000071e  00000000  00000000  00002e60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b8  00000000  00000000  0000357e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e6       	ldi	r30, 0x6A	; 106
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 38       	cpi	r26, 0x88	; 136
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <main>
  7a:	0c 94 b3 01 	jmp	0x366	; 0x366 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_SET_PIN_DIRECTION>:
}

u8 DIO_GET_PIN(u8 port, u8 pin)
{
    return ((*PIN[port] & (1<<pin)) >> pin);
}
  82:	44 23       	and	r20, r20
  84:	19 f0       	breq	.+6      	; 0x8c <DIO_SET_PIN_DIRECTION+0xa>
  86:	41 30       	cpi	r20, 0x01	; 1
  88:	b1 f0       	breq	.+44     	; 0xb6 <DIO_SET_PIN_DIRECTION+0x34>
  8a:	08 95       	ret
  8c:	e8 2f       	mov	r30, r24
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	ee 0f       	add	r30, r30
  92:	ff 1f       	adc	r31, r31
  94:	e0 5a       	subi	r30, 0xA0	; 160
  96:	ff 4f       	sbci	r31, 0xFF	; 255
  98:	01 90       	ld	r0, Z+
  9a:	f0 81       	ld	r31, Z
  9c:	e0 2d       	mov	r30, r0
  9e:	20 81       	ld	r18, Z
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	02 c0       	rjmp	.+4      	; 0xaa <DIO_SET_PIN_DIRECTION+0x28>
  a6:	88 0f       	add	r24, r24
  a8:	99 1f       	adc	r25, r25
  aa:	6a 95       	dec	r22
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <DIO_SET_PIN_DIRECTION+0x24>
  ae:	80 95       	com	r24
  b0:	82 23       	and	r24, r18
  b2:	80 83       	st	Z, r24
  b4:	08 95       	ret
  b6:	e8 2f       	mov	r30, r24
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	ee 0f       	add	r30, r30
  bc:	ff 1f       	adc	r31, r31
  be:	e0 5a       	subi	r30, 0xA0	; 160
  c0:	ff 4f       	sbci	r31, 0xFF	; 255
  c2:	01 90       	ld	r0, Z+
  c4:	f0 81       	ld	r31, Z
  c6:	e0 2d       	mov	r30, r0
  c8:	20 81       	ld	r18, Z
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_SET_PIN_DIRECTION+0x52>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_SET_PIN_DIRECTION+0x4e>
  d8:	82 2b       	or	r24, r18
  da:	80 83       	st	Z, r24
  dc:	08 95       	ret

000000de <DIO_SET_PIN>:
  de:	e8 2f       	mov	r30, r24
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	ee 0f       	add	r30, r30
  e4:	ff 1f       	adc	r31, r31
  e6:	e8 59       	subi	r30, 0x98	; 152
  e8:	ff 4f       	sbci	r31, 0xFF	; 255
  ea:	01 90       	ld	r0, Z+
  ec:	f0 81       	ld	r31, Z
  ee:	e0 2d       	mov	r30, r0
  f0:	20 81       	ld	r18, Z
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	02 c0       	rjmp	.+4      	; 0xfc <DIO_SET_PIN+0x1e>
  f8:	88 0f       	add	r24, r24
  fa:	99 1f       	adc	r25, r25
  fc:	6a 95       	dec	r22
  fe:	e2 f7       	brpl	.-8      	; 0xf8 <DIO_SET_PIN+0x1a>
 100:	82 2b       	or	r24, r18
 102:	80 83       	st	Z, r24
 104:	08 95       	ret

00000106 <DIO_CLEAR_PIN>:
 106:	e8 2f       	mov	r30, r24
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	ee 0f       	add	r30, r30
 10c:	ff 1f       	adc	r31, r31
 10e:	e8 59       	subi	r30, 0x98	; 152
 110:	ff 4f       	sbci	r31, 0xFF	; 255
 112:	01 90       	ld	r0, Z+
 114:	f0 81       	ld	r31, Z
 116:	e0 2d       	mov	r30, r0
 118:	20 81       	ld	r18, Z
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_CLEAR_PIN+0x1e>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_CLEAR_PIN+0x1a>
 128:	80 95       	com	r24
 12a:	82 23       	and	r24, r18
 12c:	80 83       	st	Z, r24
 12e:	08 95       	ret

00000130 <DIO_WRITE_PORT>:

void DIO_WRITE_PORT(u8 port, u8 value)
{
    *PORT[port] = value;
 130:	e8 2f       	mov	r30, r24
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	ee 0f       	add	r30, r30
 136:	ff 1f       	adc	r31, r31
 138:	e8 59       	subi	r30, 0x98	; 152
 13a:	ff 4f       	sbci	r31, 0xFF	; 255
 13c:	01 90       	ld	r0, Z+
 13e:	f0 81       	ld	r31, Z
 140:	e0 2d       	mov	r30, r0
 142:	60 83       	st	Z, r22
 144:	08 95       	ret

00000146 <DIO_WRITE_DDR>:
}

void DIO_WRITE_DDR(u8 port, u8 value)
{
     *DDR[port] = value;
 146:	e8 2f       	mov	r30, r24
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	ee 0f       	add	r30, r30
 14c:	ff 1f       	adc	r31, r31
 14e:	e0 5a       	subi	r30, 0xA0	; 160
 150:	ff 4f       	sbci	r31, 0xFF	; 255
 152:	01 90       	ld	r0, Z+
 154:	f0 81       	ld	r31, Z
 156:	e0 2d       	mov	r30, r0
 158:	60 83       	st	Z, r22
 15a:	08 95       	ret

0000015c <DIO_READ_PORT>:
}

u8 DIO_READ_PORT(u8 port)
{
    return (*PORT[port]);
 15c:	e8 2f       	mov	r30, r24
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	ee 0f       	add	r30, r30
 162:	ff 1f       	adc	r31, r31
 164:	e8 59       	subi	r30, 0x98	; 152
 166:	ff 4f       	sbci	r31, 0xFF	; 255
 168:	01 90       	ld	r0, Z+
 16a:	f0 81       	ld	r31, Z
 16c:	e0 2d       	mov	r30, r0
 16e:	80 81       	ld	r24, Z
 170:	08 95       	ret

00000172 <LCD_PEEK>:
void LCD_WRITE_INT(u32 value)
{
	u8 buffer[20];
	CONVERT_DECIMAL_TO_SREING(value, buffer);
	LCD_WRITE_STRING(buffer);
}
 172:	63 e0       	ldi	r22, 0x03	; 3
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SET_PIN>
 17a:	88 e0       	ldi	r24, 0x08	; 8
 17c:	8a 95       	dec	r24
 17e:	f1 f7       	brne	.-4      	; 0x17c <LCD_PEEK+0xa>
 180:	63 e0       	ldi	r22, 0x03	; 3
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	0e 94 83 00 	call	0x106	; 0x106 <DIO_CLEAR_PIN>
 188:	08 95       	ret

0000018a <LCD_WRITE_CHAR>:
 18a:	cf 93       	push	r28
 18c:	c8 2f       	mov	r28, r24
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 ae 00 	call	0x15c	; 0x15c <DIO_READ_PORT>
 196:	6c 2f       	mov	r22, r28
 198:	62 95       	swap	r22
 19a:	6f 70       	andi	r22, 0x0F	; 15
 19c:	80 7f       	andi	r24, 0xF0	; 240
 19e:	68 2b       	or	r22, r24
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	0e 94 98 00 	call	0x130	; 0x130 <DIO_WRITE_PORT>
 1a6:	61 e0       	ldi	r22, 0x01	; 1
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SET_PIN>
 1ae:	0e 94 b9 00 	call	0x172	; 0x172 <LCD_PEEK>
 1b2:	87 eb       	ldi	r24, 0xB7	; 183
 1b4:	9b e0       	ldi	r25, 0x0B	; 11
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_WRITE_CHAR+0x2c>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCD_WRITE_CHAR+0x32>
 1bc:	00 00       	nop
 1be:	80 e0       	ldi	r24, 0x00	; 0
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	0e 94 ae 00 	call	0x15c	; 0x15c <DIO_READ_PORT>
 1c6:	cf 70       	andi	r28, 0x0F	; 15
 1c8:	80 7f       	andi	r24, 0xF0	; 240
 1ca:	6c 2f       	mov	r22, r28
 1cc:	68 2b       	or	r22, r24
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	0e 94 98 00 	call	0x130	; 0x130 <DIO_WRITE_PORT>
 1d4:	61 e0       	ldi	r22, 0x01	; 1
 1d6:	80 e0       	ldi	r24, 0x00	; 0
 1d8:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SET_PIN>
 1dc:	0e 94 b9 00 	call	0x172	; 0x172 <LCD_PEEK>
 1e0:	8f e6       	ldi	r24, 0x6F	; 111
 1e2:	97 e1       	ldi	r25, 0x17	; 23
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <LCD_WRITE_CHAR+0x5a>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <LCD_WRITE_CHAR+0x60>
 1ea:	00 00       	nop
 1ec:	cf 91       	pop	r28
 1ee:	08 95       	ret

000001f0 <LCD_WRITE_STRING>:
 1f0:	cf 92       	push	r12
 1f2:	df 92       	push	r13
 1f4:	ef 92       	push	r14
 1f6:	ff 92       	push	r15
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	ec 01       	movw	r28, r24
 1fe:	c1 2c       	mov	r12, r1
 200:	d1 2c       	mov	r13, r1
 202:	76 01       	movw	r14, r12
 204:	07 c0       	rjmp	.+14     	; 0x214 <LCD_WRITE_STRING+0x24>
 206:	0e 94 c5 00 	call	0x18a	; 0x18a <LCD_WRITE_CHAR>
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	c8 1a       	sub	r12, r24
 20e:	d8 0a       	sbc	r13, r24
 210:	e8 0a       	sbc	r14, r24
 212:	f8 0a       	sbc	r15, r24
 214:	fe 01       	movw	r30, r28
 216:	ec 0d       	add	r30, r12
 218:	fd 1d       	adc	r31, r13
 21a:	80 81       	ld	r24, Z
 21c:	81 11       	cpse	r24, r1
 21e:	f3 cf       	rjmp	.-26     	; 0x206 <LCD_WRITE_STRING+0x16>
 220:	df 91       	pop	r29
 222:	cf 91       	pop	r28
 224:	ff 90       	pop	r15
 226:	ef 90       	pop	r14
 228:	df 90       	pop	r13
 22a:	cf 90       	pop	r12
 22c:	08 95       	ret

0000022e <LCD_WRITE_COMMAND>:
	}
}


void LCD_WRITE_COMMAND(u8 command)
{
 22e:	cf 93       	push	r28
 230:	c8 2f       	mov	r28, r24
	/*send upper nipple*/
	DIO_WRITE_PORT(A, (command >> 4) | (DIO_READ_PORT(A) & 0XF0));
 232:	80 e0       	ldi	r24, 0x00	; 0
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	0e 94 ae 00 	call	0x15c	; 0x15c <DIO_READ_PORT>
 23a:	6c 2f       	mov	r22, r28
 23c:	62 95       	swap	r22
 23e:	6f 70       	andi	r22, 0x0F	; 15
 240:	80 7f       	andi	r24, 0xF0	; 240
 242:	68 2b       	or	r22, r24
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	0e 94 98 00 	call	0x130	; 0x130 <DIO_WRITE_PORT>
	DIO_CLEAR_PIN(A, RS);
 24a:	61 e0       	ldi	r22, 0x01	; 1
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	0e 94 83 00 	call	0x106	; 0x106 <DIO_CLEAR_PIN>
	LCD_PEEK();
 252:	0e 94 b9 00 	call	0x172	; 0x172 <LCD_PEEK>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 256:	87 eb       	ldi	r24, 0xB7	; 183
 258:	9b e0       	ldi	r25, 0x0B	; 11
 25a:	01 97       	sbiw	r24, 0x01	; 1
 25c:	f1 f7       	brne	.-4      	; 0x25a <LCD_WRITE_COMMAND+0x2c>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <LCD_WRITE_COMMAND+0x32>
 260:	00 00       	nop
	_delay_ms(1);
	
	/*send lower nipple*/
	DIO_WRITE_PORT(A, (command & 0X0F) | (DIO_READ_PORT(A) & 0XF0));
 262:	80 e0       	ldi	r24, 0x00	; 0
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	0e 94 ae 00 	call	0x15c	; 0x15c <DIO_READ_PORT>
 26a:	cf 70       	andi	r28, 0x0F	; 15
 26c:	80 7f       	andi	r24, 0xF0	; 240
 26e:	6c 2f       	mov	r22, r28
 270:	68 2b       	or	r22, r24
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	0e 94 98 00 	call	0x130	; 0x130 <DIO_WRITE_PORT>
	DIO_CLEAR_PIN(A, RS);
 278:	61 e0       	ldi	r22, 0x01	; 1
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	0e 94 83 00 	call	0x106	; 0x106 <DIO_CLEAR_PIN>
	LCD_PEEK();
 280:	0e 94 b9 00 	call	0x172	; 0x172 <LCD_PEEK>
 284:	8f e6       	ldi	r24, 0x6F	; 111
 286:	97 e1       	ldi	r25, 0x17	; 23
 288:	01 97       	sbiw	r24, 0x01	; 1
 28a:	f1 f7       	brne	.-4      	; 0x288 <LCD_WRITE_COMMAND+0x5a>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <LCD_WRITE_COMMAND+0x60>
 28e:	00 00       	nop
	_delay_ms(2);
}
 290:	cf 91       	pop	r28
 292:	08 95       	ret

00000294 <LCD_INIT>:
#include <util/delay.h>

void LCD_INIT(void)
{
	/*set data and control pins direction to be output*/
	DIO_WRITE_DDR(A, (1<<RS) | (1<<E) | (1<<D4) | (1<<D5) | (1<<D6) | (1<<D7));
 294:	6a ef       	ldi	r22, 0xFA	; 250
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_WRITE_DDR>
	
	/*set the initial value for the enable bin low */
	DIO_CLEAR_PIN(A, E);
 29c:	63 e0       	ldi	r22, 0x03	; 3
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	0e 94 83 00 	call	0x106	; 0x106 <DIO_CLEAR_PIN>
 2a4:	8f e5       	ldi	r24, 0x5F	; 95
 2a6:	9a ee       	ldi	r25, 0xEA	; 234
 2a8:	01 97       	sbiw	r24, 0x01	; 1
 2aa:	f1 f7       	brne	.-4      	; 0x2a8 <LCD_INIT+0x14>
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <LCD_INIT+0x1a>
 2ae:	00 00       	nop
	
	/*delay 20 ms for LCD to be ready*/
	_delay_ms(20);
	
	LCD_WRITE_COMMAND(mode_4bit);
 2b0:	82 e0       	ldi	r24, 0x02	; 2
 2b2:	0e 94 17 01 	call	0x22e	; 0x22e <LCD_WRITE_COMMAND>
	
	/*set the LCD in 8 bits mode*/
	LCD_WRITE_COMMAND(mode_4bit_dot_matrix);
 2b6:	88 e2       	ldi	r24, 0x28	; 40
 2b8:	0e 94 17 01 	call	0x22e	; 0x22e <LCD_WRITE_COMMAND>
	
	/*turn display on and cursor off*/
	LCD_WRITE_COMMAND(display_on);
 2bc:	8c e0       	ldi	r24, 0x0C	; 12
 2be:	0e 94 17 01 	call	0x22e	; 0x22e <LCD_WRITE_COMMAND>
	
	/*clear the LCD*/
	LCD_WRITE_COMMAND(clear_lcd);
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	0e 94 17 01 	call	0x22e	; 0x22e <LCD_WRITE_COMMAND>
	
	/*set the cursor to the begin of the next line*/
	LCD_WRITE_COMMAND(first_line_begin);
 2c8:	80 e8       	ldi	r24, 0x80	; 128
 2ca:	0e 94 17 01 	call	0x22e	; 0x22e <LCD_WRITE_COMMAND>
	
	/*say hi*/
	LCD_WRITE_STRING("Amar Mohamed  :)");
 2ce:	80 e7       	ldi	r24, 0x70	; 112
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_WRITE_STRING>
 2d6:	9f ef       	ldi	r25, 0xFF	; 255
 2d8:	2c ed       	ldi	r18, 0xDC	; 220
 2da:	8d e6       	ldi	r24, 0x6D	; 109
 2dc:	91 50       	subi	r25, 0x01	; 1
 2de:	20 40       	sbci	r18, 0x00	; 0
 2e0:	80 40       	sbci	r24, 0x00	; 0
 2e2:	e1 f7       	brne	.-8      	; 0x2dc <LCD_INIT+0x48>
 2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <LCD_INIT+0x52>
 2e6:	00 00       	nop
	_delay_ms(3000);
	LCD_WRITE_COMMAND(clear_lcd);
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	0e 94 17 01 	call	0x22e	; 0x22e <LCD_WRITE_COMMAND>
	
	/*set the cursor to the begin of the next line*/
	LCD_WRITE_COMMAND(first_line_begin);
 2ee:	80 e8       	ldi	r24, 0x80	; 128
 2f0:	0e 94 17 01 	call	0x22e	; 0x22e <LCD_WRITE_COMMAND>
 2f4:	08 95       	ret

000002f6 <main>:
#define F_CPU 16000000
#include <util/delay.h>

int main(void)
{
     DIO_SET_PIN_DIRECTION(C, pin2, 1);
 2f6:	41 e0       	ldi	r20, 0x01	; 1
 2f8:	62 e0       	ldi	r22, 0x02	; 2
 2fa:	82 e0       	ldi	r24, 0x02	; 2
 2fc:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SET_PIN_DIRECTION>
     DIO_SET_PIN_DIRECTION(C, pin7, 1);
 300:	41 e0       	ldi	r20, 0x01	; 1
 302:	67 e0       	ldi	r22, 0x07	; 7
 304:	82 e0       	ldi	r24, 0x02	; 2
 306:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SET_PIN_DIRECTION>
	 DIO_SET_PIN_DIRECTION(D, pin3, 1);
 30a:	41 e0       	ldi	r20, 0x01	; 1
 30c:	63 e0       	ldi	r22, 0x03	; 3
 30e:	83 e0       	ldi	r24, 0x03	; 3
 310:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SET_PIN_DIRECTION>
	 while (1)
	 {
	 DIO_SET_PIN(C, pin2);
 314:	62 e0       	ldi	r22, 0x02	; 2
 316:	82 e0       	ldi	r24, 0x02	; 2
 318:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SET_PIN>
	  DIO_SET_PIN(C, pin7);
 31c:	67 e0       	ldi	r22, 0x07	; 7
 31e:	82 e0       	ldi	r24, 0x02	; 2
 320:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SET_PIN>
	  DIO_SET_PIN(D, pin3);
 324:	63 e0       	ldi	r22, 0x03	; 3
 326:	83 e0       	ldi	r24, 0x03	; 3
 328:	0e 94 6f 00 	call	0xde	; 0xde <DIO_SET_PIN>
 32c:	2f ef       	ldi	r18, 0xFF	; 255
 32e:	81 ee       	ldi	r24, 0xE1	; 225
 330:	94 e0       	ldi	r25, 0x04	; 4
 332:	21 50       	subi	r18, 0x01	; 1
 334:	80 40       	sbci	r24, 0x00	; 0
 336:	90 40       	sbci	r25, 0x00	; 0
 338:	e1 f7       	brne	.-8      	; 0x332 <main+0x3c>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <main+0x46>
 33c:	00 00       	nop
	  _delay_ms(100);
	 DIO_CLEAR_PIN(C, pin2);
 33e:	62 e0       	ldi	r22, 0x02	; 2
 340:	82 e0       	ldi	r24, 0x02	; 2
 342:	0e 94 83 00 	call	0x106	; 0x106 <DIO_CLEAR_PIN>
 346:	2f ef       	ldi	r18, 0xFF	; 255
 348:	81 ee       	ldi	r24, 0xE1	; 225
 34a:	94 e0       	ldi	r25, 0x04	; 4
 34c:	21 50       	subi	r18, 0x01	; 1
 34e:	80 40       	sbci	r24, 0x00	; 0
 350:	90 40       	sbci	r25, 0x00	; 0
 352:	e1 f7       	brne	.-8      	; 0x34c <main+0x56>
 354:	00 c0       	rjmp	.+0      	; 0x356 <main+0x60>
 356:	00 00       	nop
	  _delay_ms(100);
	  LCD_INIT();
 358:	0e 94 4a 01 	call	0x294	; 0x294 <LCD_INIT>
	  LCD_WRITE_STRING("KHALAF");
 35c:	81 e8       	ldi	r24, 0x81	; 129
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_WRITE_STRING>
 364:	d7 cf       	rjmp	.-82     	; 0x314 <main+0x1e>

00000366 <_exit>:
 366:	f8 94       	cli

00000368 <__stop_program>:
 368:	ff cf       	rjmp	.-2      	; 0x368 <__stop_program>
