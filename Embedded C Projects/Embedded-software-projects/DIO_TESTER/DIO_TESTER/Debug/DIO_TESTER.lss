
DIO_TESTER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000382  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000003d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003d6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000408  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000444  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b06  00000000  00000000  0000049c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000060c  00000000  00000000  00000fa2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a5  00000000  00000000  000015ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00001954  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000039e  00000000  00000000  000019cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002dd  00000000  00000000  00001d6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00002047  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 20 01 	call	0x240	; 0x240 <main>
  64:	0c 94 bf 01 	jmp	0x37e	; 0x37e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SetPinDirection>:



void DIO_SetPinDirection(u8 PortId, u8 PinID, u8 PinDirection)
{
    switch (PortId)
  6c:	81 30       	cpi	r24, 0x01	; 1
  6e:	01 f1       	breq	.+64     	; 0xb0 <DIO_SetPinDirection+0x44>
  70:	30 f0       	brcs	.+12     	; 0x7e <DIO_SetPinDirection+0x12>
  72:	82 30       	cpi	r24, 0x02	; 2
  74:	b1 f1       	breq	.+108    	; 0xe2 <DIO_SetPinDirection+0x76>
  76:	83 30       	cpi	r24, 0x03	; 3
  78:	09 f4       	brne	.+2      	; 0x7c <DIO_SetPinDirection+0x10>
  7a:	4c c0       	rjmp	.+152    	; 0x114 <DIO_SetPinDirection+0xa8>
  7c:	08 95       	ret
    {
    case DIO_PORTA:
      if (PinDirection == DIO_PIN_OUTPUT)
  7e:	41 30       	cpi	r20, 0x01	; 1
  80:	59 f4       	brne	.+22     	; 0x98 <DIO_SetPinDirection+0x2c>
      {
         SET(DDRA, PinID);
  82:	2a b3       	in	r18, 0x1a	; 26
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	90 e0       	ldi	r25, 0x00	; 0
  88:	02 c0       	rjmp	.+4      	; 0x8e <DIO_SetPinDirection+0x22>
  8a:	88 0f       	add	r24, r24
  8c:	99 1f       	adc	r25, r25
  8e:	6a 95       	dec	r22
  90:	e2 f7       	brpl	.-8      	; 0x8a <DIO_SetPinDirection+0x1e>
  92:	82 2b       	or	r24, r18
  94:	8a bb       	out	0x1a, r24	; 26
  96:	08 95       	ret
      }
      else
      {
         RESET(DDRA, PinID);
  98:	2a b3       	in	r18, 0x1a	; 26
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <DIO_SetPinDirection+0x38>
  a0:	88 0f       	add	r24, r24
  a2:	99 1f       	adc	r25, r25
  a4:	6a 95       	dec	r22
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <DIO_SetPinDirection+0x34>
  a8:	80 95       	com	r24
  aa:	82 23       	and	r24, r18
  ac:	8a bb       	out	0x1a, r24	; 26
  ae:	08 95       	ret
      }
      break;
   case DIO_PORTB:
      if (PinDirection == DIO_PIN_OUTPUT)
  b0:	41 30       	cpi	r20, 0x01	; 1
  b2:	59 f4       	brne	.+22     	; 0xca <DIO_SetPinDirection+0x5e>
      {
         SET(DDRB, PinID);
  b4:	27 b3       	in	r18, 0x17	; 23
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <DIO_SetPinDirection+0x54>
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <DIO_SetPinDirection+0x50>
  c4:	82 2b       	or	r24, r18
  c6:	87 bb       	out	0x17, r24	; 23
  c8:	08 95       	ret
      }
      else
      {
         RESET(DDRB, PinID);
  ca:	27 b3       	in	r18, 0x17	; 23
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <DIO_SetPinDirection+0x6a>
  d2:	88 0f       	add	r24, r24
  d4:	99 1f       	adc	r25, r25
  d6:	6a 95       	dec	r22
  d8:	e2 f7       	brpl	.-8      	; 0xd2 <DIO_SetPinDirection+0x66>
  da:	80 95       	com	r24
  dc:	82 23       	and	r24, r18
  de:	87 bb       	out	0x17, r24	; 23
  e0:	08 95       	ret
      }
      break;
   
   case DIO_PORTC:
      if (PinDirection == DIO_PIN_OUTPUT)
  e2:	41 30       	cpi	r20, 0x01	; 1
  e4:	59 f4       	brne	.+22     	; 0xfc <DIO_SetPinDirection+0x90>
      {
         SET(DDRC, PinID);
  e6:	24 b3       	in	r18, 0x14	; 20
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <DIO_SetPinDirection+0x86>
  ee:	88 0f       	add	r24, r24
  f0:	99 1f       	adc	r25, r25
  f2:	6a 95       	dec	r22
  f4:	e2 f7       	brpl	.-8      	; 0xee <DIO_SetPinDirection+0x82>
  f6:	82 2b       	or	r24, r18
  f8:	84 bb       	out	0x14, r24	; 20
  fa:	08 95       	ret
      }
      else
      {
         RESET(DDRC, PinID);
  fc:	24 b3       	in	r18, 0x14	; 20
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	02 c0       	rjmp	.+4      	; 0x108 <DIO_SetPinDirection+0x9c>
 104:	88 0f       	add	r24, r24
 106:	99 1f       	adc	r25, r25
 108:	6a 95       	dec	r22
 10a:	e2 f7       	brpl	.-8      	; 0x104 <DIO_SetPinDirection+0x98>
 10c:	80 95       	com	r24
 10e:	82 23       	and	r24, r18
 110:	84 bb       	out	0x14, r24	; 20
 112:	08 95       	ret
      }
      break;
   
   case DIO_PORTD:
      if (PinDirection == DIO_PIN_OUTPUT)
 114:	41 30       	cpi	r20, 0x01	; 1
 116:	59 f4       	brne	.+22     	; 0x12e <DIO_SetPinDirection+0xc2>
      {
         SET(DDRD, PinID);
 118:	21 b3       	in	r18, 0x11	; 17
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_SetPinDirection+0xb8>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_SetPinDirection+0xb4>
 128:	82 2b       	or	r24, r18
 12a:	81 bb       	out	0x11, r24	; 17
 12c:	08 95       	ret
      }
      else
      {
         RESET(DDRD, PinID);
 12e:	21 b3       	in	r18, 0x11	; 17
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_SetPinDirection+0xce>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_SetPinDirection+0xca>
 13e:	80 95       	com	r24
 140:	82 23       	and	r24, r18
 142:	81 bb       	out	0x11, r24	; 17
 144:	08 95       	ret

00000146 <DIO_PinValue>:
     
}

void DIO_PinValue(u8 PortId, u8 PinID, u8 PinValue)
{
     switch (PortId)
 146:	81 30       	cpi	r24, 0x01	; 1
 148:	01 f1       	breq	.+64     	; 0x18a <DIO_PinValue+0x44>
 14a:	30 f0       	brcs	.+12     	; 0x158 <DIO_PinValue+0x12>
 14c:	82 30       	cpi	r24, 0x02	; 2
 14e:	b1 f1       	breq	.+108    	; 0x1bc <DIO_PinValue+0x76>
 150:	83 30       	cpi	r24, 0x03	; 3
 152:	09 f4       	brne	.+2      	; 0x156 <DIO_PinValue+0x10>
 154:	4c c0       	rjmp	.+152    	; 0x1ee <DIO_PinValue+0xa8>
 156:	08 95       	ret
    {
    case DIO_PORTA:
      if (PinValue == HIGH)
 158:	41 30       	cpi	r20, 0x01	; 1
 15a:	59 f4       	brne	.+22     	; 0x172 <DIO_PinValue+0x2c>
      {
         SET(PORTA, PinID);
 15c:	2b b3       	in	r18, 0x1b	; 27
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	02 c0       	rjmp	.+4      	; 0x168 <DIO_PinValue+0x22>
 164:	88 0f       	add	r24, r24
 166:	99 1f       	adc	r25, r25
 168:	6a 95       	dec	r22
 16a:	e2 f7       	brpl	.-8      	; 0x164 <DIO_PinValue+0x1e>
 16c:	82 2b       	or	r24, r18
 16e:	8b bb       	out	0x1b, r24	; 27
 170:	08 95       	ret
      }
      else
      {
         RESET(PORTA, PinID);
 172:	2b b3       	in	r18, 0x1b	; 27
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	02 c0       	rjmp	.+4      	; 0x17e <DIO_PinValue+0x38>
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	6a 95       	dec	r22
 180:	e2 f7       	brpl	.-8      	; 0x17a <DIO_PinValue+0x34>
 182:	80 95       	com	r24
 184:	82 23       	and	r24, r18
 186:	8b bb       	out	0x1b, r24	; 27
 188:	08 95       	ret
      }
      break;
   case DIO_PORTB:
      if (PinValue == HIGH)
 18a:	41 30       	cpi	r20, 0x01	; 1
 18c:	59 f4       	brne	.+22     	; 0x1a4 <DIO_PinValue+0x5e>
      {
         SET(PORTB, PinID);
 18e:	28 b3       	in	r18, 0x18	; 24
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <DIO_PinValue+0x54>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <DIO_PinValue+0x50>
 19e:	82 2b       	or	r24, r18
 1a0:	88 bb       	out	0x18, r24	; 24
 1a2:	08 95       	ret
      }
      else
      {
         RESET(PORTB, PinID);
 1a4:	28 b3       	in	r18, 0x18	; 24
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_PinValue+0x6a>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_PinValue+0x66>
 1b4:	80 95       	com	r24
 1b6:	82 23       	and	r24, r18
 1b8:	88 bb       	out	0x18, r24	; 24
 1ba:	08 95       	ret
      }
      break;
   
   case DIO_PORTC:
      if (PinValue == HIGH)
 1bc:	41 30       	cpi	r20, 0x01	; 1
 1be:	59 f4       	brne	.+22     	; 0x1d6 <DIO_PinValue+0x90>
      {
         SET(PORTC, PinID);
 1c0:	25 b3       	in	r18, 0x15	; 21
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_PinValue+0x86>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_PinValue+0x82>
 1d0:	82 2b       	or	r24, r18
 1d2:	85 bb       	out	0x15, r24	; 21
 1d4:	08 95       	ret
      }
      else
      {
         RESET(PORTC, PinID);
 1d6:	25 b3       	in	r18, 0x15	; 21
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_PinValue+0x9c>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	6a 95       	dec	r22
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_PinValue+0x98>
 1e6:	80 95       	com	r24
 1e8:	82 23       	and	r24, r18
 1ea:	85 bb       	out	0x15, r24	; 21
 1ec:	08 95       	ret
      }
      break;
   
   case DIO_PORTD:
      if (PinValue == HIGH)
 1ee:	41 30       	cpi	r20, 0x01	; 1
 1f0:	59 f4       	brne	.+22     	; 0x208 <DIO_PinValue+0xc2>
      {
         SET(PORTD, PinID);
 1f2:	22 b3       	in	r18, 0x12	; 18
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <DIO_PinValue+0xb8>
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	6a 95       	dec	r22
 200:	e2 f7       	brpl	.-8      	; 0x1fa <DIO_PinValue+0xb4>
 202:	82 2b       	or	r24, r18
 204:	82 bb       	out	0x12, r24	; 18
 206:	08 95       	ret
      }
      else
      {
         RESET(PORTD, PinID);
 208:	22 b3       	in	r18, 0x12	; 18
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	02 c0       	rjmp	.+4      	; 0x214 <DIO_PinValue+0xce>
 210:	88 0f       	add	r24, r24
 212:	99 1f       	adc	r25, r25
 214:	6a 95       	dec	r22
 216:	e2 f7       	brpl	.-8      	; 0x210 <DIO_PinValue+0xca>
 218:	80 95       	com	r24
 21a:	82 23       	and	r24, r18
 21c:	82 bb       	out	0x12, r24	; 18
 21e:	08 95       	ret

00000220 <DIO_GET_PIN_VALUE>:

u8 DIO_GET_PIN_VALUE(u8 PortId, u8 PinID)
{
   u8 PIN_state;

   switch (PortId)
 220:	81 30       	cpi	r24, 0x01	; 1
 222:	41 f0       	breq	.+16     	; 0x234 <DIO_GET_PIN_VALUE+0x14>
 224:	28 f0       	brcs	.+10     	; 0x230 <DIO_GET_PIN_VALUE+0x10>
 226:	82 30       	cpi	r24, 0x02	; 2
 228:	39 f0       	breq	.+14     	; 0x238 <DIO_GET_PIN_VALUE+0x18>
 22a:	83 30       	cpi	r24, 0x03	; 3
 22c:	39 f0       	breq	.+14     	; 0x23c <DIO_GET_PIN_VALUE+0x1c>
 22e:	08 95       	ret
    {
    case DIO_PORTA:
      if (GET_BIT(PINA, PinID) == HIGH)
 230:	89 b3       	in	r24, 0x19	; 25
 232:	08 95       	ret
         PIN_state = LOW;
      }
       
      break;
   case DIO_PORTB:
      if (GET_BIT(PINB, PinID) == HIGH)
 234:	86 b3       	in	r24, 0x16	; 22
 236:	08 95       	ret
      }
       
      break;
   
   case DIO_PORTC:
      if (GET_BIT(PINC, PinID) == HIGH)
 238:	83 b3       	in	r24, 0x13	; 19
 23a:	08 95       	ret
      }
       
      break;
   
   case DIO_PORTD:
      if (GET_BIT(PIND, PinID) == HIGH)
 23c:	80 b3       	in	r24, 0x10	; 16
       
      break;

   return PIN_state;
}
}
 23e:	08 95       	ret

00000240 <main>:

int main(void)
{
    /* Replace with your application code */
	
	DIO_SetPinDirection(DIO_PORTC, PIN2,DIO_PIN_OUTPUT); //LED 0 O/P
 240:	41 e0       	ldi	r20, 0x01	; 1
 242:	62 e0       	ldi	r22, 0x02	; 2
 244:	82 e0       	ldi	r24, 0x02	; 2
 246:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTC, PIN7,DIO_PIN_OUTPUT); //LED 1 O/P
 24a:	41 e0       	ldi	r20, 0x01	; 1
 24c:	67 e0       	ldi	r22, 0x07	; 7
 24e:	82 e0       	ldi	r24, 0x02	; 2
 250:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTD, PIN3,DIO_PIN_OUTPUT); //LED 2 O/P
 254:	41 e0       	ldi	r20, 0x01	; 1
 256:	63 e0       	ldi	r22, 0x03	; 3
 258:	83 e0       	ldi	r24, 0x03	; 3
 25a:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	
	
	
	DIO_SetPinDirection(DIO_PORTB, PIN0, DIO_PIN_INPUT);
 25e:	40 e0       	ldi	r20, 0x00	; 0
 260:	60 e0       	ldi	r22, 0x00	; 0
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTD, PIN6, DIO_PIN_INPUT);
 268:	40 e0       	ldi	r20, 0x00	; 0
 26a:	66 e0       	ldi	r22, 0x06	; 6
 26c:	83 e0       	ldi	r24, 0x03	; 3
 26e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTD, PIN2, DIO_PIN_INPUT);
 272:	40 e0       	ldi	r20, 0x00	; 0
 274:	62 e0       	ldi	r22, 0x02	; 2
 276:	83 e0       	ldi	r24, 0x03	; 3
 278:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	
	
	DIO_SetPinDirection(DIO_PORTA, PIN4, DIO_PIN_OUTPUT);
 27c:	41 e0       	ldi	r20, 0x01	; 1
 27e:	64 e0       	ldi	r22, 0x04	; 4
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTA, PIN5, DIO_PIN_OUTPUT);
 286:	41 e0       	ldi	r20, 0x01	; 1
 288:	65 e0       	ldi	r22, 0x05	; 5
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTA, PIN6, DIO_PIN_OUTPUT);
 290:	41 e0       	ldi	r20, 0x01	; 1
 292:	66 e0       	ldi	r22, 0x06	; 6
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTA, PIN7, DIO_PIN_OUTPUT);
 29a:	41 e0       	ldi	r20, 0x01	; 1
 29c:	67 e0       	ldi	r22, 0x07	; 7
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTB, PIN1, DIO_PIN_OUTPUT);
 2a4:	41 e0       	ldi	r20, 0x01	; 1
 2a6:	61 e0       	ldi	r22, 0x01	; 1
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTB, PIN2, DIO_PIN_OUTPUT);
 2ae:	41 e0       	ldi	r20, 0x01	; 1
 2b0:	62 e0       	ldi	r22, 0x02	; 2
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTB, PIN3, DIO_PIN_OUTPUT);
 2b8:	41 e0       	ldi	r20, 0x01	; 1
 2ba:	63 e0       	ldi	r22, 0x03	; 3
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	
	DIO_PinValue (DIO_PORTA, PIN4, HIGH);
 2c2:	41 e0       	ldi	r20, 0x01	; 1
 2c4:	64 e0       	ldi	r22, 0x04	; 4
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
	DIO_PinValue (DIO_PORTA, PIN5, LOW);
 2cc:	40 e0       	ldi	r20, 0x00	; 0
 2ce:	65 e0       	ldi	r22, 0x05	; 5
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
	DIO_PinValue (DIO_PORTA, PIN6, LOW);
 2d6:	40 e0       	ldi	r20, 0x00	; 0
 2d8:	66 e0       	ldi	r22, 0x06	; 6
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
	DIO_PinValue (DIO_PORTA, PIN7, LOW);
 2e0:	40 e0       	ldi	r20, 0x00	; 0
 2e2:	67 e0       	ldi	r22, 0x07	; 7
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
	
	DIO_PinValue (DIO_PORTB, PIN1, HIGH);
 2ea:	41 e0       	ldi	r20, 0x01	; 1
 2ec:	61 e0       	ldi	r22, 0x01	; 1
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
	DIO_PinValue (DIO_PORTB, PIN2, HIGH);
 2f4:	41 e0       	ldi	r20, 0x01	; 1
 2f6:	62 e0       	ldi	r22, 0x02	; 2
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
	DIO_PinValue (DIO_PORTB, PIN3, HIGH);
 2fe:	41 e0       	ldi	r20, 0x01	; 1
 300:	63 e0       	ldi	r22, 0x03	; 3
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
	u8 SW1_State = 0;
	u8 SW2_State = 0;
	
    while (1) 
    {
		SW0_State = DIO_GET_PIN_VALUE(DIO_PORTB, PIN0);
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	0e 94 10 01 	call	0x220	; 0x220 <DIO_GET_PIN_VALUE>
 310:	18 2f       	mov	r17, r24
		SW1_State = DIO_GET_PIN_VALUE(DIO_PORTD, PIN6);
 312:	66 e0       	ldi	r22, 0x06	; 6
 314:	83 e0       	ldi	r24, 0x03	; 3
 316:	0e 94 10 01 	call	0x220	; 0x220 <DIO_GET_PIN_VALUE>
 31a:	d8 2f       	mov	r29, r24
		SW2_State = DIO_GET_PIN_VALUE(DIO_PORTD, PIN2);
 31c:	62 e0       	ldi	r22, 0x02	; 2
 31e:	83 e0       	ldi	r24, 0x03	; 3
 320:	0e 94 10 01 	call	0x220	; 0x220 <DIO_GET_PIN_VALUE>
 324:	c8 2f       	mov	r28, r24
		
		if (SW0_State == HIGH)
 326:	11 30       	cpi	r17, 0x01	; 1
 328:	59 f4       	brne	.+22     	; 0x340 <main+0x100>
		{
			DIO_PinValue(DIO_PORTC, PIN2, HIGH); //LED 0 ON
 32a:	41 e0       	ldi	r20, 0x01	; 1
 32c:	62 e0       	ldi	r22, 0x02	; 2
 32e:	82 e0       	ldi	r24, 0x02	; 2
 330:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
			DIO_PinValue(DIO_PORTA, PIN3, HIGH); //buzzer 2 toggle
 334:	41 e0       	ldi	r20, 0x01	; 1
 336:	63 e0       	ldi	r22, 0x03	; 3
 338:	80 e0       	ldi	r24, 0x00	; 0
 33a:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
 33e:	0a c0       	rjmp	.+20     	; 0x354 <main+0x114>
		}
		else
		{
			DIO_PinValue(DIO_PORTC, PIN2, LOW);
 340:	40 e0       	ldi	r20, 0x00	; 0
 342:	62 e0       	ldi	r22, 0x02	; 2
 344:	82 e0       	ldi	r24, 0x02	; 2
 346:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
			DIO_PinValue(DIO_PORTA, PIN3, LOW); //buzzer 2 toggle
 34a:	40 e0       	ldi	r20, 0x00	; 0
 34c:	63 e0       	ldi	r22, 0x03	; 3
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
			
		}
		if (SW1_State == HIGH)
 354:	d1 30       	cpi	r29, 0x01	; 1
 356:	31 f4       	brne	.+12     	; 0x364 <main+0x124>
		{
			//_delay_ms(10);
			DIO_PinValue(DIO_PORTC, PIN7, LOW); //LED 1 OFF
 358:	40 e0       	ldi	r20, 0x00	; 0
 35a:	67 e0       	ldi	r22, 0x07	; 7
 35c:	82 e0       	ldi	r24, 0x02	; 2
 35e:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
 362:	05 c0       	rjmp	.+10     	; 0x36e <main+0x12e>
		}
		else
		{
			DIO_PinValue(DIO_PORTC, PIN7, HIGH); //LED 1 OFF
 364:	41 e0       	ldi	r20, 0x01	; 1
 366:	67 e0       	ldi	r22, 0x07	; 7
 368:	82 e0       	ldi	r24, 0x02	; 2
 36a:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
		}
		if (SW2_State == HIGH)
 36e:	c1 30       	cpi	r28, 0x01	; 1
 370:	59 f6       	brne	.-106    	; 0x308 <main+0xc8>
		{
			//_delay_ms(500);
				DIO_PinValue(DIO_PORTD, PIN3, HIGH); //LED 2 toggle
 372:	41 e0       	ldi	r20, 0x01	; 1
 374:	63 e0       	ldi	r22, 0x03	; 3
 376:	83 e0       	ldi	r24, 0x03	; 3
 378:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_PinValue>
 37c:	c5 cf       	rjmp	.-118    	; 0x308 <main+0xc8>

0000037e <_exit>:
 37e:	f8 94       	cli

00000380 <__stop_program>:
 380:	ff cf       	rjmp	.-2      	; 0x380 <__stop_program>
